[{"name":"widget","exts":[],"desc":"these properties apply to _all_ widgets, and can be used anywhere!","props":[{"name":"class","desc":"css class name","type":"string"},{"name":"valign","desc":"how to align this vertically. possible values: \"fill\", \"baseline\", \"center\", \"start\", \"end\"","type":"string"},{"name":"halign","desc":"how to align this horizontally. possible values: \"fill\", \"baseline\", \"center\", \"start\", \"end\"","type":"string"},{"name":"vexpand","desc":"should this container expand vertically. Default: false.","type":"bool"},{"name":"hexpand","desc":"should this widget expand horizontally. Default: false.","type":"bool"},{"name":"width","desc":"width of this element. note that this can not restrict the size if the contents stretch it","type":"int"},{"name":"height","desc":"height of this element. note that this can not restrict the size if the contents stretch it","type":"int"},{"name":"active","desc":"If this widget can be interacted with","type":"bool"},{"name":"tooltip","desc":"tooltip text (on hover)","type":"string"},{"name":"visible","desc":"visibility of the widget","type":"bool"},{"name":"style","desc":"inline css style applied to the widget","type":"string"},{"name":"css","desc":"scss code applied to the widget, i.e.: `button {color: red;}`","type":"string"}],"isVisible":true},{"name":"combo-box-text","exts":[],"desc":"A combo box allowing the user to choose between several items.","props":[{"name":"items","desc":"Items that should be displayed in the combo box","type":"vec"},{"name":"timeout","desc":"timeout of the command: Default: \"200ms\"","type":"duration"},{"name":"onchange","desc":"runs the code when a item was selected, replacing {} with the item as a string","type":"string"}],"isVisible":true},{"name":"expander","exts":[],"desc":"A widget that can expand and collapse, showing/hiding it's children.","props":[{"name":"name","desc":"name of the expander","type":"string"},{"name":"expanded","desc":"sets if the tree is expanded","type":"bool"}],"isVisible":true},{"name":"revealer","exts":[],"desc":"A widget that can reveal a child with an animation.","props":[{"name":"transition","desc":"the name of the transition. Possible values: \"slideright\", \"slideleft\", \"slideup\", \"slidedown\", \"crossfade\", \"none\"","type":"string"},{"name":"reveal","desc":"sets if the child is revealed or not","type":"bool"},{"name":"duration","desc":"the duration of the reveal transition. Default: \"500ms\"","type":"duration"}],"isVisible":true},{"name":"a checkbox","exts":[],"desc":"A checkbox that can trigger events on checked / unchecked.","props":[{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"},{"name":"onchecked","desc":"action (command) to be executed when checked by the user","type":"string"},{"name":"onunchecked","desc":"similar to onchecked but when the widget is unchecked","type":"string"}],"isVisible":true},{"name":"color-button","exts":[],"desc":"A button opening a color chooser window","props":[{"name":"use-alpha","desc":"bool to whether or not use alpha","type":"bool"},{"name":"onchange","desc":"runs the code when the color was selected","type":"string"},{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"}],"isVisible":true},{"name":"color-chooser","exts":[],"desc":"A color chooser widget","props":[{"name":"use-alpha","desc":"bool to wether or not use alpha","type":"bool"},{"name":"onchange","desc":"runs the code when the color was selected","type":"string"},{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"}],"isVisible":true},{"name":"scale","exts":["range","orientable"],"desc":"A slider.","props":[{"name":"flipped","desc":"flip the direction","type":"bool"},{"name":"marks","desc":"draw marks","type":"string"},{"name":"draw-value","desc":"draw the value of the property","type":"bool"},{"name":"round-digits","desc":"Sets the number of decimals to round the value to when it changes","type":"int"},{"name":"value","desc":"the value","type":"float"},{"name":"min","desc":"the minimum value","type":"float"},{"name":"max","desc":"the maximum value","type":"float"},{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"},{"name":"onchange","desc":"command executed once the value is changes. The placeholder `{}`, used in the command will be replaced by the new value.","type":"string"},{"name":"orientation","desc":"orientation of the widget. Possible values: $orientation","type":"string"}],"isVisible":true},{"name":"progress","exts":[],"desc":"A progress bar. HINT: for the `width` property to work, you may need to set the `min-width` of `progressbar > trough` in your css.","props":[{"name":"flipped","desc":"flip the direction","type":"bool"},{"name":"value","desc":"value of the progress bar (between 0-100)","type":"float"},{"name":"orientation","desc":"orientation of the progress bar. possible values: \"vertical\", \"v\", \"horizontal\", \"h\"","type":"string"}],"isVisible":true},{"name":"input","exts":[],"desc":"An input field. For this to be useful, set `focusable=\"true\"` on the window.","props":[{"name":"value","desc":"the content of the text field","type":"string"},{"name":"onchange","desc":"Command to run when the text changes. The placeholder `{}` will be replaced by the value","type":"string"},{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"},{"name":"onaccept","desc":"Command to run when the user hits return in the input field. The placeholder `{}` will be replaced by the value","type":"string"},{"name":"password","desc":"if the input is obscured","type":"bool"}],"isVisible":true},{"name":"button","exts":[],"desc":"A button","props":[{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"},{"name":"onclick","desc":"a command that get's run when the button is clicked","type":"string"},{"name":"onmiddleclick","desc":"a command that get's run when the button is middleclicked","type":"string"},{"name":"onrightclick","desc":"a command that get's run when the button is rightclicked","type":"string"}],"isVisible":true},{"name":"image","exts":[],"desc":"A widget displaying an image","props":[{"name":"path","desc":"path to the image file","type":"string"},{"name":"image-width","desc":"width of the image","type":"int"},{"name":"image-height","desc":"height of the image","type":"int"}],"isVisible":true},{"name":"box","exts":[],"desc":"the main layout container","props":[{"name":"spacing","desc":"spacing between elements","type":"int"},{"name":"orientation","desc":"orientation of the box. possible values: \"vertical\", \"v\", \"horizontal\", \"h\"","type":"string"},{"name":"space-evenly","desc":"space the widgets evenly.","type":"bool"}],"isVisible":true},{"name":"overlay","exts":[],"desc":"a widget that places its children on top of each other. The overlay widget takes the size of its first child.","props":[],"isVisible":true},{"name":"centerbox","exts":[],"desc":"a box that must contain exactly three children, which will be layed out at the start, center and end of the container.","props":[{"name":"orientation","desc":"orientation of the centerbox. possible values: \"vertical\", \"v\", \"horizontal\", \"h\"","type":"string"}],"isVisible":true},{"name":"scroll","exts":[],"desc":"a container with a single child that can scroll.","props":[{"name":"hscroll","desc":"scroll horizontally","type":"bool"},{"name":"vscroll","desc":"scroll vertically","type":"bool"}],"isVisible":true},{"name":"eventbox","exts":[],"desc":"a container which can receive events and must contain exactly one child. Supports `:hover` and `:active` css selectors.","props":[{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"},{"name":"onscroll","desc":"event to execute when the user scrolls with the mouse over the widget. The placeholder `{}` used in the command will be replaced with either `up` or `down`.","type":"string"},{"name":"onhover","desc":"event to execute when the user hovers over the widget","type":"string"},{"name":"onhoverlost","desc":"event to execute when the user losts hovers over the widget","type":"string"},{"name":"cursor","desc":"Cursor to show while hovering (see [gtk3-cursors](https://docs.gtk.org/gdk3/ctor.Cursor.new_from_name.html) for possible names)","type":"string"},{"name":"ondropped","desc":"Command to execute when something is dropped on top of this element. The placeholder `{}` used in the command will be replaced with the uri to the dropped thing.","type":"string"},{"name":"dragvalue","desc":"URI that will be provided when dragging from this widget","type":"string"},{"name":"dragtype","desc":"Type of value that should be dragged from this widget. Possible values: \"file\", \"text\"","type":"string"},{"name":"onclick","desc":"a command that get's run when the button is clicked","type":"string"},{"name":"onmiddleclick","desc":"a command that get's run when the button is middleclicked","type":"string"},{"name":"onrightclick","desc":"a command that get's run when the button is rightclicked","type":"string"}],"isVisible":true},{"name":"label","exts":[],"desc":"A text widget giving you more control over how the text is displayed","props":[{"name":"text","desc":"the text to display","type":"string"},{"name":"limit-width","desc":"maximum count of characters to display","type":"int"},{"name":"truncate-left","desc":"whether to truncate on the left side","type":"bool"},{"name":"show-truncated","desc":"show whether the text was truncated","type":"bool"},{"name":"markup","desc":"Pango markup to display","type":"string"},{"name":"wrap","desc":"Wrap the text. This mainly makes sense if you set the width of this widget.","type":"bool"},{"name":"angle","desc":"the angle of rotation for the label (between 0 - 360)","type":"float"},{"name":"xalign","desc":"the alignment of the label text on the x axis (between 0 - 1, 0 -> left, 0.5 -> center, 1 -> right)","type":"float"},{"name":"yalign","desc":"the alignment of the label text on the y axis (between 0 - 1, 0 -> bottom, 0.5 -> center, 1 -> top)","type":"float"},{"name":"justify","desc":"the justification of the label text (left, right, center, fill)","type":"string"}],"isVisible":true},{"name":"literal","exts":[],"desc":"A widget that allows you to render arbitrary yuck.","props":[{"name":"content","desc":"inline yuck that will be rendered as a widget.","type":"string"}],"isVisible":true},{"name":"calendar","exts":[],"desc":"A widget that displays a calendar","props":[{"name":"day","desc":"the selected day","type":"float"},{"name":"month","desc":"the selected month","type":"float"},{"name":"year","desc":"the selected year","type":"float"},{"name":"show-details","desc":"show details","type":"bool"},{"name":"show-heading","desc":"show heading line","type":"bool"},{"name":"show-day-names","desc":"show names of days","type":"bool"},{"name":"show-week-numbers","desc":"show week numbers","type":"bool"},{"name":"onclick","desc":"command to run when the user selects a date. The `{0}` placeholder will be replaced by the selected day, `{1}` will be replaced by the month, and `{2}` by the year.","type":"string"},{"name":"timeout","desc":"timeout of the command. Default: \"200ms\"","type":"duration"}],"isVisible":true},{"name":"transform","exts":[],"desc":"A widget that applies transformations to its content. They are applied in the following","props":[{"name":"rotate","desc":"the percentage to rotate","type":"float"},{"name":"translate-x","desc":"the amount to translate in the x direction (px or %)","type":"string"},{"name":"translate-y","desc":"the amount to translate in the y direction (px or %)","type":"string"},{"name":"scale-x","desc":"the amount to scale in the x direction (px or %)","type":"string"},{"name":"scale-y","desc":"the amount to scale in the y direction (px or %)","type":"string"}],"isVisible":true},{"name":"circular-progress","exts":[],"desc":"A widget that displays a circular progress bar","props":[{"name":"value","desc":"the value, between 0 - 100","type":"float"},{"name":"start-at","desc":"the percentage that the circle should start at","type":"float"},{"name":"thickness","desc":"the thickness of the circle","type":"float"},{"name":"clockwise","desc":"wether the progress bar spins clockwise or counter clockwise","type":"bool"}],"isVisible":true},{"name":"graph","exts":[],"desc":"A widget that displays a graph showing how a given value changes over time","props":[{"name":"value","desc":"the value, between 0 - 100","type":"float"},{"name":"thickness","desc":"the thickness of the line","type":"float"},{"name":"time-range","desc":"the range of time to show","type":"duration"},{"name":"min","desc":"the minimum value to show (defaults to 0 if value_max is provided)","type":"float"},{"name":"max","desc":"the maximum value to show","type":"float"},{"name":"dynamic","desc":"whether the y range should dynamically change based on value","type":"bool"},{"name":"line-style","desc":"changes the look of the edges in the graph. Values: \"miter\" (default), \"round\",","type":"string"}],"isVisible":true}]